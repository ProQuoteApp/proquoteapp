name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.1'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        cd app
        flutter pub get
    
    - name: Create Firebase configuration
      run: |
        cd app
        cat > lib/firebase_options.dart << 'EOL'
        // File generated by FlutterFire CLI.
        // ignore_for_file: type=lint
        import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
        import 'package:flutter/foundation.dart'
            show defaultTargetPlatform, kIsWeb, TargetPlatform;

        /// Default [FirebaseOptions] for use with your Firebase apps.
        ///
        /// Example:
        /// ```dart
        /// import 'firebase_options.dart';
        /// // ...
        /// await Firebase.initializeApp(
        ///   options: DefaultFirebaseOptions.currentPlatform,
        /// );
        /// ```
        class DefaultFirebaseOptions {
          static FirebaseOptions get currentPlatform {
            if (kIsWeb) {
              return web;
            }
            switch (defaultTargetPlatform) {
              case TargetPlatform.android:
                return android;
              case TargetPlatform.iOS:
                return ios;
              case TargetPlatform.macOS:
                return macos;
              case TargetPlatform.windows:
                return windows;
              case TargetPlatform.linux:
                throw UnsupportedError(
                  'DefaultFirebaseOptions have not been configured for linux - '
                  'you can reconfigure this by running the FlutterFire CLI again.',
                );
              default:
                throw UnsupportedError(
                  'DefaultFirebaseOptions are not supported for this platform.',
                );
            }
          }

          static const FirebaseOptions web = FirebaseOptions(
            apiKey: "AIzaSyBNs4NvLzCsLY1yAYohxff1zKdFzHIMtwY",
            authDomain: "proquote-77221.firebaseapp.com",
            projectId: "proquote-77221",
            storageBucket: "proquote-77221.appspot.com",
            messagingSenderId: "1023959081882",
            appId: "1:1023959081882:web:c4328ea9ce48d4de931023",
            measurementId: "G-3YJ5V4F5WY"
          );

          static const FirebaseOptions android = FirebaseOptions(
            apiKey: 'AIzaSyBNs4NvLzCsLY1yAYohxff1zKdFzHIMtwY',
            appId: '1:1023959081882:android:ab62601b10707f5c931023',
            messagingSenderId: '1023959081882',
            projectId: 'proquote-77221',
            storageBucket: 'proquote-77221.appspot.com',
          );

          static const FirebaseOptions ios = FirebaseOptions(
            apiKey: 'AIzaSyAySTfYsXQ_slelUAeOkWsk4-dKAiWGLLI',
            appId: '1:1023959081882:ios:ab62601b10707f5c931023',
            messagingSenderId: '1023959081882',
            projectId: 'proquote-77221',
            storageBucket: 'proquote-77221.appspot.com',
            iosBundleId: 'com.example.app',
          );

          static const FirebaseOptions macos = FirebaseOptions(
            apiKey: 'AIzaSyAySTfYsXQ_slelUAeOkWsk4-dKAiWGLLI',
            appId: '1:1023959081882:ios:ab62601b10707f5c931023',
            messagingSenderId: '1023959081882',
            projectId: 'proquote-77221',
            storageBucket: 'proquote-77221.appspot.com',
            iosBundleId: 'com.example.app',
          );

          static const FirebaseOptions windows = FirebaseOptions(
            apiKey: 'AIzaSyBNs4NvLzCsLY1yAYohxff1zKdFzHIMtwY',
            appId: '1:1023959081882:web:c4328ea9ce48d4de931023',
            messagingSenderId: '1023959081882',
            projectId: 'proquote-77221',
            authDomain: 'proquote-77221.firebaseapp.com',
            storageBucket: 'proquote-77221.appspot.com',
            measurementId: 'G-3YJ5V4F5WY',
          );
        }
        EOL
        echo "Created firebase_options.dart with actual configuration values"
    
    - name: Add build timestamp
      run: |
        cd app
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        echo "Build timestamp: $TIMESTAMP" > web/build_timestamp.txt
    
    - name: Build web
      run: |
        cd app
        flutter clean
        flutter build web --release --base-href /proquoteapp/
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./app/build/web
        force_orphan: true
        commit_message: "Deploy: ${{ github.event.head_commit.message }} [skip ci]"
