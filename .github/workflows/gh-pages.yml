name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main  # Explicitly checkout the main branch
        fetch-depth: 0  # Fetch all history for proper versioning
    
    # Explicitly add upload-artifact action
    - name: Setup upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: dummy
        path: README.md
        retention-days: 1
    
    - name: Debug repository contents
      run: |
        echo "Current directory contents:"
        ls -la
        echo "App directory contents:"
        ls -la app
        echo "App/lib directory contents:"
        ls -la app/lib
        echo "App/lib/theme directory contents:"
        ls -la app/lib/theme
        echo "App/lib/screens directory contents:"
        ls -la app/lib/screens
        echo "App/lib/widgets directory contents:"
        ls -la app/lib/widgets
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.1'  # Adjust to your Flutter version
        channel: 'stable'
        cache: true
    
    - name: Install dependencies
      run: |
        cd app
        flutter pub get
        # Print the dependencies to verify shadcn_ui is included
        cat pubspec.lock | grep -A 5 shadcn_ui || echo "shadcn_ui not found in pubspec.lock"
    
    - name: Create mock Firebase configuration
      run: |
        cd app
        if [ -f "lib/firebase_options_template.dart" ]; then
          cp lib/firebase_options_template.dart lib/firebase_options.dart
          sed -i 's/WEB_API_KEY/mock-api-key/g' lib/firebase_options.dart
          sed -i 's/WEB_AUTH_DOMAIN/mock-project.firebaseapp.com/g' lib/firebase_options.dart
          sed -i 's/WEB_PROJECT_ID/mock-project/g' lib/firebase_options.dart
          sed -i 's/WEB_STORAGE_BUCKET/mock-project.appspot.com/g' lib/firebase_options.dart
          sed -i 's/WEB_MESSAGING_SENDER_ID/123456789012/g' lib/firebase_options.dart
          sed -i 's/WEB_APP_ID/1:123456789012:web:abcdef1234567890/g' lib/firebase_options.dart
          sed -i 's/WEB_MEASUREMENT_ID/G-ABCDEFGHIJ/g' lib/firebase_options.dart
          
          # Platform values
          sed -i 's/ANDROID_API_KEY/mock-api-key/g' lib/firebase_options.dart
          sed -i 's/ANDROID_APP_ID/1:123456789012:android:abcdef1234567890/g' lib/firebase_options.dart
          sed -i 's/ANDROID_MESSAGING_SENDER_ID/123456789012/g' lib/firebase_options.dart
          sed -i 's/ANDROID_PROJECT_ID/mock-project/g' lib/firebase_options.dart
          sed -i 's/ANDROID_STORAGE_BUCKET/mock-project.appspot.com/g' lib/firebase_options.dart
          
          sed -i 's/IOS_API_KEY/mock-api-key/g' lib/firebase_options.dart
          sed -i 's/IOS_APP_ID/1:123456789012:ios:abcdef1234567890/g' lib/firebase_options.dart
          sed -i 's/IOS_MESSAGING_SENDER_ID/123456789012/g' lib/firebase_options.dart
          sed -i 's/IOS_PROJECT_ID/mock-project/g' lib/firebase_options.dart
          sed -i 's/IOS_STORAGE_BUCKET/mock-project.appspot.com/g' lib/firebase_options.dart
          sed -i 's/IOS_BUNDLE_ID/com.example.app/g' lib/firebase_options.dart
          
          sed -i 's/MACOS_API_KEY/mock-api-key/g' lib/firebase_options.dart
          sed -i 's/MACOS_APP_ID/1:123456789012:macos:abcdef1234567890/g' lib/firebase_options.dart
          sed -i 's/MACOS_MESSAGING_SENDER_ID/123456789012/g' lib/firebase_options.dart
          sed -i 's/MACOS_PROJECT_ID/mock-project/g' lib/firebase_options.dart
          sed -i 's/MACOS_STORAGE_BUCKET/mock-project.appspot.com/g' lib/firebase_options.dart
          sed -i 's/MACOS_BUNDLE_ID/com.example.app/g' lib/firebase_options.dart
          
          sed -i 's/WINDOWS_API_KEY/mock-api-key/g' lib/firebase_options.dart
          sed -i 's/WINDOWS_APP_ID/1:123456789012:windows:abcdef1234567890/g' lib/firebase_options.dart
          sed -i 's/WINDOWS_MESSAGING_SENDER_ID/123456789012/g' lib/firebase_options.dart
          sed -i 's/WINDOWS_PROJECT_ID/mock-project/g' lib/firebase_options.dart
          sed -i 's/WINDOWS_AUTH_DOMAIN/mock-project.firebaseapp.com/g' lib/firebase_options.dart
          sed -i 's/WINDOWS_STORAGE_BUCKET/mock-project.appspot.com/g' lib/firebase_options.dart
          sed -i 's/WINDOWS_MEASUREMENT_ID/G-ABCDEFGHIJ/g' lib/firebase_options.dart
        else
          echo "Error: firebase_options_template.dart not found!"
          exit 1
        fi
    
    - name: Add build timestamp
      run: |
        cd app
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        echo "Build timestamp: $TIMESTAMP" > web/build_timestamp.txt
    
    - name: Build web
      run: |
        cd app
        flutter clean
        flutter build web --release --base-href /proquoteapp/
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./app/build/web
        force_orphan: true
        commit_message: "Deploy: ${{ github.event.head_commit.message }} [skip ci]"
